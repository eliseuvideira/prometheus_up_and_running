services:
  prometheus:
    image: prom/prometheus:latest
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --storage.tsdb.path=/prometheus
      - --web.external-url=http://localhost:9090
    ports:
      - 9090:9090
    volumes:
      - ./prometheus.yaml:/etc/prometheus/prometheus.yml
      - ./rules.yaml:/etc/prometheus/rules.yaml
      - ./prometheus:/prometheus
    restart: always

  node-exporter:
    image: prom/node-exporter:latest
    command:
      - --path.procfs=/host/proc
      - --path.sysfs=/host/sys
      - --collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    ports:
      - 9100:9100
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    restart: always

  alertmanager:
    image: prom/alertmanager:latest
    command:
      - --config.file=/etc/alertmanager/alertmanager.yml
      - --storage.path=/alertmanager
      - --web.external-url=http://localhost:9093
    ports:
      - 9093:9093
    volumes:
      - ./alertmanager.yaml:/etc/alertmanager/alertmanager.yml
      - ./alertmanager:/alertmanager
    restart: always

  http-service:
    image: http-service:latest
    build:
      context: http_service
      dockerfile: Dockerfile
    environment:
      - RUST_ENV=production
      - RUST_LOG=info
      - PORT=8082
    ports:
      - 8082:8082
    restart: always

  pushgateway:
    image: prom/pushgateway:latest
    ports:
      - 9091:9091
    restart: always

  batch-service:
    image: batch-service:latest
    build:
      context: batch_service
      dockerfile: Dockerfile
    environment:
      - PUSH_GATEWAY_URL=http://pushgateway:9091
    restart: always

  grafana:
    image: grafana/grafana:latest
    ports:
      - 3000:3000
    volumes:
      - ./grafana:/var/lib/grafana
    restart: always

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    ports:
      - 8081:8081
    command:
      - --docker_only=true
      - --port=8081
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    restart: always
